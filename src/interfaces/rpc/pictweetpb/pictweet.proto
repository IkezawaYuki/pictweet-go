syntax = "proto3";

package pictweet;

import "google/api/annotations.proto";

option go_package="pictweetpb";

message Tweet{
    int32 id = 1;
    string title = 2;
    string content = 3;
    string image_url = 4;
    string author = 5;
    string avatar_url = 6;
    string created_at = 7;
}

message Comment{
    int32 id = 1;
    string text = 2;
    string author = 3;
    string avatar_url = 4;
    string created_at = 5;
}

message ListTweetsRequest{

}

message ListTweetsResponse{
    repeated Tweet tweets = 1;
}

message PostTweetRequest{
    string title = 1;
    string content = 2;
    string image_url = 3;
    int32 user_id = 4;
}

message PostTweetResponse{
    string result = 1;
}

message ShowTweetRequest{
    int32 tweet_id = 1;
}

message ShowTweetResponse{
    Tweet tweet = 1;
    repeated Comment comments = 2;
}

message PostCommentRequest{
    int32 tweet_id = 1;
    int32 user_id = 2;
    string text = 3;
}

message PostCommentResponse{
    string result = 1;
}

message DeleteTweetRequest{
    int32 tweet_id = 1;
}

message DeleteTweetResponse{
    string result = 1;
}

message RegisterUserRequest{
    string name = 1;
    string email = 2;
    string avatar = 3;
}

message RegsiterUserResponse{
    string result = 1;
}

service PictweetService{
    rpc ListTweets(ListTweetsRequest)returns(ListTweetsResponse){
        option (google.api.http) = {
            get: "/api/tweets"
        };
    };
    rpc PostTweet(PostTweetRequest)returns(PostTweetResponse){
        option (google.api.http) = {
            post: "/api/tweet"
            body: "*"
        };
    };
    rpc ShowTweet(ShowTweetRequest)returns(ShowTweetResponse){
        option (google.api.http) = {
            get: "/api/tweet/{tweet_id}"
        };
    };
    rpc PostComment(PostCommentRequest)returns(PostCommentResponse){
        option (google.api.http) = {
            post: "/api/comment/post"
            body: "*"
        };
    };
    rpc DeleteTweet(DeleteTweetRequest)returns(DeleteTweetResponse){
        option (google.api.http) = {
            delete: "/api/tweet/{tweet_id}"
        };
    };
    rpc RegisterUser(RegisterUserRequest)returns(RegsiterUserResponse){
        option (google.api.http) = {
            post: "/api/user"
            body: "*"
        };
    };
}